version: 2

aliases:
  - &save_cargo_cache
    key: v3-cargo-{{ checksum "Cargo.lock" }}-{{ checksum "fixture_setup/Cargo.lock" }}
    paths:
      - target
      - fixture_setup/target
      - ~/.cargo

  - &restore_cargo_cache
    keys:
      - v3-cargo-{{ checksum "Cargo.lock" }}-{{ checksum "fixture_setup/Cargo.lock" }}
      - v3-cargo-

  - &save_yarn_cache
    key: yarn-{{ checksum "fixture_setup/yarn.lock" }}
    paths:
      - fixture_setup/node_modules

  - &restore_yarn_cache
    keys:
      - yarn-{{ checksum "fixture_setup/yarn.lock" }}
      - yarn-

  - &compile_commands |
      cargo build

  - &lint_commands |
      cargo fmt -- --write-mode=diff

jobs:
  build:
    docker:
      - image: fortemusic/core-build

    steps:
      - checkout

      - run:
          name: Checkout Git Submodules
          command: git submodule update --init

      - restore_cache: *restore_cargo_cache

      - run:
          name: Check Formatting of forte_core
          command: *lint_commands

      - run:
          name: Check Formatting of fixture_setup
          working_directory: fixture_setup
          command: *lint_commands

      - run:
          name: Compile forte_core
          command: *compile_commands

      - run:
          name: Compile fixture_setup
          working_directory: fixture_setup
          command: *compile_commands

      - save_cache: *save_cargo_cache

      # The workspace stores some of the same information the cache does, but
      # the workflow is shared across a workflow and updated on every build
      # while the cache only updates when a lock file changes.
      - persist_to_workspace:
          root: .
          paths:
            - target
            - fixture_setup/target

  integration-test:
    docker:
      - image: fortemusic/core-build

    environment:
      RUST_BACKTRACE: "1"
      DATABASE_URL: /project/db.sqlite

    steps:
      - attach_workspace:
          at: /project

      - checkout

      - run:
          name: Check src/database.rs
          command: |
            diesel print-schema > src/database.expected.rs
            diff src/database{,.expected}.rs || exit 1

      - run:
          name: Checkout Git Submodules
          command: git submodule update --init

      - restore_cache: *restore_yarn_cache

      - run:
          name: Install Test Runner
          working_directory: fixture_setup
          command: yarn

      - save_cache: *save_yarn_cache

      - run:
          name: Initialize Database
          command: diesel migration run

      - restore_cache: *restore_cargo_cache

      - run:
          name: Install Fixtures
          working_directory: fixture_setup
          command: cargo run

      - run:
          name: Start Core
          background: true
          command: cargo run

      - save_cache: *save_cargo_cache

      - run:
          name: Run Tests
          working_directory: fixture_setup
          # There is a timeout so that the code can be compiled from scratch if
          # needed. This is useful when running locally.
          command: |
            wait-for --timeout=3600 localhost:8080 -- echo "Core started"
            yarn run forte-test-api http://localhost:8080/graphql

workflows:
  version: 2
  test:
    jobs:
      - build
      - integration-test:
          requires:
            - build
